/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyContract, MyContractInterface } from "../MyContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "message",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161061638038061061683398101604081905261002f91610058565b600061003b82826101aa565b5050610269565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561006b57600080fd5b82516001600160401b038082111561008257600080fd5b818501915085601f83011261009657600080fd5b8151818111156100a8576100a8610042565b604051601f8201601f19908116603f011681019083821181831017156100d0576100d0610042565b8160405282815288868487010111156100e857600080fd5b600093505b8284101561010a57848401860151818501870152928501926100ed565b600086848301015280965050505050505092915050565b600181811c9082168061013557607f821691505b60208210810361015557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101a557600081815260208120601f850160051c810160208610156101825750805b601f850160051c820191505b818110156101a15782815560010161018e565b5050505b505050565b81516001600160401b038111156101c3576101c3610042565b6101d7816101d18454610121565b8461015b565b602080601f83116001811461020c57600084156101f45750858301515b600019600386901b1c1916600185901b1785556101a1565b600085815260208120601f198616915b8281101561023b5788860151825594840194600190910190840161021c565b50858210156102595787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61039e806102786000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063368b87721461003b578063e21f37ce14610050575b600080fd5b61004e610049366004610122565b61006e565b005b61005861007e565b60405161006591906101d2565b60405180910390f35b600061007a82826102a9565b5050565b6000805461008b90610220565b80601f01602080910402602001604051908101604052809291908181526020018280546100b790610220565b80156101045780601f106100d957610100808354040283529160200191610104565b820191906000526020600020905b8154815290600101906020018083116100e757829003601f168201915b505050505081565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561013457600080fd5b81356001600160401b038082111561014b57600080fd5b818401915084601f83011261015f57600080fd5b8135818111156101715761017161010c565b604051601f8201601f19908116603f011681019083821181831017156101995761019961010c565b816040528281528760208487010111156101b257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156101ff578581018301518582016040015282016101e3565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061023457607f821691505b60208210810361025457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102a457600081815260208120601f850160051c810160208610156102815750805b601f850160051c820191505b818110156102a05782815560010161028d565b5050505b505050565b81516001600160401b038111156102c2576102c261010c565b6102d6816102d08454610220565b8461025a565b602080601f83116001811461030b57600084156102f35750858301515b600019600386901b1c1916600185901b1785556102a0565b600085815260208120601f198616915b8281101561033a5788860151825594840194600190910190840161031b565b50858210156103585787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212209c0b6ae220caaa069753d8d8125a4f193b46248f9d956bf567960474567729a064736f6c63430008100033";

type MyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyContract__factory extends ContractFactory {
  constructor(...args: MyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MyContract";
  }

  deploy(
    _message: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyContract> {
    return super.deploy(_message, overrides || {}) as Promise<MyContract>;
  }
  getDeployTransaction(
    _message: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_message, overrides || {});
  }
  attach(address: string): MyContract {
    return super.attach(address) as MyContract;
  }
  connect(signer: Signer): MyContract__factory {
    return super.connect(signer) as MyContract__factory;
  }
  static readonly contractName: "MyContract";
  public readonly contractName: "MyContract";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyContractInterface {
    return new utils.Interface(_abi) as MyContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyContract {
    return new Contract(address, _abi, signerOrProvider) as MyContract;
  }
}
